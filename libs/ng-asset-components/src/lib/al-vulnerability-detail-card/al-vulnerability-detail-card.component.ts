
/**
 * Displays the information of an exposure in a simple card.
 */
import {
    Component,
    Input,
    OnInit,
} from '@angular/core';
import { AlVulnerabilitiesClient } from '@al/vulnerabilities';

@Component({
    selector: 'al-vulnerability-detail-card',
    templateUrl: './al-vulnerability-detail-card.component.html',
    styleUrls: ['./al-vulnerability-detail-card.component.scss'],
})
export class AlVulnerabilityDetailCardComponent implements OnInit {
    @Input()
    public exposure!: any; // TODO: The received type does not match Exposure type.

    @Input()
    public expanded: boolean = false;

    ngOnInit() {
        // Empty
    }

    toggleVulnDetails($event:any) {
        $event.stopPropagation();

        if (!this.exposure.hasComplementaryData) {
            if (this.exposure.vulnerability_id) {
                AlVulnerabilitiesClient.getVulnerability(this.exposure.vulnerability_id).then(
                    vulnerability => {
                        this.exposure.hasComplementaryData = true;
                        if (vulnerability.hasOwnProperty('resolution')) {
                            this.exposure.resolution = vulnerability.resolution;
                        }
                        if (vulnerability.hasOwnProperty('description')) {
                            this.exposure.description = vulnerability.description;
                        }
                        if (vulnerability.hasOwnProperty('impact')) {
                            this.exposure.impact = vulnerability.impact;
                        }
                    },
                    error => {
                        console.warn(`No details found for vulnerability id ${this.exposure.vulnerabilityId}. Reason: ${error}`);
                    });
            } else {
                console.error("No vulnerability id found.");
            }
        }
    }
}
