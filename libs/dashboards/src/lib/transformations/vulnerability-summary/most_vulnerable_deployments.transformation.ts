import { Widget as WidgetConfig } from '@al/ng-visualizations-components';
import { BaseColumnConfig } from '../base_objects.transformation';
import { ExposuresSummary} from '@al/assets-query';

const buildRecordLink = (severity: string, deploymentId: string): {[p:string]:string} => {
  return {
    severity: severity,
    deployment_id: deploymentId
  };
};

export const mostVulnerableDeployments = (responses: ExposuresSummary|any[], item?: WidgetConfig) => {
  const exposuresSummary = responses[0] as ExposuresSummary;
  const accountDeployments = responses[1] as any[];
  const deploymentEntries = {};
  accountDeployments.map((deployment) => {
    deploymentEntries[deployment.id] = deployment.name;
  });
    const config: BaseColumnConfig  = {
      series: [
        {
          name:'Info',
          data: [],
          className: 'info',
          legendIndex: 3
        },
        {
          name:'Low',
          data: [],
          className: 'low',
          legendIndex: 2
        },
        {
          name:'Medium',
          data: [],
          className: 'medium',
          legendIndex: 1
        },
        {
          name:'High',
          data: [],
          className: 'critical',
          legendIndex: 0
        }
      ]
    };

    config.description = 'Count of Vulnerabilities';
    const deploymentNames: string[] = [];
    exposuresSummary.exposures.forEach( (item, i) => {
      deploymentNames.push(deploymentEntries[item.deployment_id]);
      const high = item.summary.high;
      const medium = item.summary.medium;
      const low = item.summary.low;
      const info = item.summary.info;
      const deploymentId = item.deployment_id;
      config.series[3].data.push({x: i, y: high, recordLink: buildRecordLink('high', deploymentId)});
      config.series[2].data.push({x: i, y: medium, recordLink: buildRecordLink('medium', deploymentId)});
      config.series[1].data.push({x: i, y: low, recordLink: buildRecordLink('low', deploymentId)});
      config.series[0].data.push({x: i, y: info, recordLink: buildRecordLink('info', deploymentId)});
    });
    config.dateOptions = deploymentNames;
    return JSON.parse(JSON.stringify(config));
};
