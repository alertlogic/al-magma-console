import { impactfulRemediations } from '../impactful_remediations.transformation';
import { ZeroStateReason } from '@al/ng-visualizations-components';
import { ExposuresQueryResponse } from '@al/assets-query';

describe('Transformation Test Suite: Impactful Remediations', () => {
  describe('Given an asset query remediations response object', () => {
    it('should return a table list config object containing an entry for each remediation item in the response', () => {
      const response: ExposuresQueryResponse = {
        remediations: {
          assets: [{
            name: '1. Something useful to display goes here...',
            remediation_id: '1',
            asset_count: 10
          },{
            name: '2. Something useful to display goes here...',
            remediation_id: '2',
            asset_count: 4
          }]
        }
      };
      expect(impactfulRemediations(response)).toEqual({
        headers: [
          { name: 'Name', field: 'summary', class: 'left multiline-content' },
          { name: 'Asset Count', field: 'count', class: 'right' }
        ],
        body: [{
          summary: '1. Something useful to display goes here...',
          count: 10,
          recordLink: {remediationId: '1'}
        },{
          summary: '2. Something useful to display goes here...',
          count: 4,
          recordLink: {remediationId: '2'}
        }]
      });
    });
    describe('with zero assets included in the response', () => {
      it('should return a zero state response object', () => {
        const response = {
          remediations: {
            assets: []
          }
        };
        expect(impactfulRemediations(response)).toEqual({
          nodata: true,
          reason: ZeroStateReason.Zero
        });
      });
    });
  });
});
