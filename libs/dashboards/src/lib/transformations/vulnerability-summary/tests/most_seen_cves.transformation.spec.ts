import { mostSeenCVEs } from '../most_seen_cves.transformation';
import { ZeroStateReason } from '@al/ng-visualizations-components';

describe('Transformation Test Suite: Impactful Remediations', () => {
  describe('Given an asset query exposures response object', () => {
    it('should return a table list config object containing an entry for each exposure item in the response', () => {
      const response = {
        exposures: {
          assets: [{
            name: '1. Something useful to display goes here...',
            id: '1',
            asset_count: 100,
            severity: 'high',
            cve: '1',
            vulnerability_id: '2'
          },{
            name: '2. Something useful to display goes here...',
            id: '1',
            asset_count: 80,
            severity: 'low',
            cve: '1',
            vulnerability_id: '2'
          },{
            name: '3. Something useful to display goes here...',
            id: '1',
            asset_count: 50,
            severity: 'info',
            cve: '1',
            vulnerability_id: '2'
          },{
            name: '4. Something useful to display goes here...',
            id: '1',
            asset_count: 15,
            severity: 'medium',
            cve: '1',
            vulnerability_id: '2'
          },{
            name: '5. Something useful to display goes here...',
            id: '1',
            asset_count: 2,
            severity: 'low',
            cve: '1',
            vulnerability_id: '2'
          }],
        },
        summary: {
          severities: {
            all: 123
          }
        }
      };
      expect(mostSeenCVEs(response)).toEqual({
        headers: [
          { name: 'CVE ID', field: 'id', class: 'left nowrap' },
          { name: 'Name', field: 'summary', class: 'left' },
          { name: 'Severity', field: 'status', class: 'left status' },
          { name: 'Count', field: 'count', class: 'right' },
          { name: '% of Open', field: 'percent', class: 'right' }
        ],
        body: [{
          summary: '1. Something useful to display goes here...',
          id: '1',
          count: 100,
          status: 'high',
          recordLink: {vulnerabilityId: '2'},
          percent: '81%'
        },{
          summary: '2. Something useful to display goes here...',
          count: 80,
          id: '1',
          status: 'low',
          recordLink: {vulnerabilityId: '2'},
          percent: '65%'
        },{
          summary: '3. Something useful to display goes here...',
          count: 50,
          id: '1',
          status: 'info',
          recordLink: {vulnerabilityId: '2'},
          percent: '41%'

        },{
          summary: '4. Something useful to display goes here...',
          count: 15,
          id: '1',
          status: 'medium',
          recordLink: {vulnerabilityId: '2'},
          percent: '12%'
        },{
          summary: '5. Something useful to display goes here...',
          count: 2,
          id: '1',
          status: 'low',
          recordLink: {vulnerabilityId: '2'},
          percent: '2%'
        }]
      });
    });
    describe('with zero assets included in the response', () => {
      it('should return a zero state response object', () => {
        const response = {
          exposures: {
            assets: [],
          },
          summary: {
              severities: {}
          }
        };
        expect(mostSeenCVEs(response)).toEqual({
          nodata: true,
          reason: ZeroStateReason.Zero
        });
      });
    });
  });
});
